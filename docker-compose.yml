version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: patient-service-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - internal


  auth-service-db:
    image: postgres:latest
    container_name: auth-service-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5001:5432"
    volumes:
      - ./auth-service-data:/var/lib/postgresql/data
    networks:
      - internal

  #zookeeper:
    #image: confluentinc/cp-zookeeper:7.5.0
    #container_name: zookeeper
    #environment:
    #  ZOOKEEPER_CLIENT_PORT: 2181
    #  ZOOKEEPER_TICK_TIME: 2000
    #ports:
    #  - "2181:2181"
    #networks:
    #  - internal

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    #depends_on:
    #  - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      #KAFKA_BROKER_ID: 1
      #KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    networks:
      - internal

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - internal

  patient-service:
    build:
      context: .
      dockerfile: ./patient-service/Dockerfile
    container_name: patient-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9001
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - postgres
    networks:
      - internal

  billing-service:
    build:
      context: .
      dockerfile: ./billing-service/Dockerfile
    container_name: billing-service
    volumes:
      - ./billing-service/target:/app/billing-service/target:rw
    ports:
      - "4001:4001"
      - "9001:9001"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - internal

  analytics-service:
    build:
      context: .
      dockerfile: ./analytics-service/Dockerfile
    container_name: analytics-service
    volumes:
      - ./analytics-service/target:/app/analytics-service/target:rw
    ports:
      - "4002:4002"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - internal

  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    volumes:
      - ./api-gateway/target:/app/api-gateway/target:rw
    ports:
      - "4004:4004"
    depends_on:
      - kafka
    networks:
      - internal

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    volumes:
      - ./auth-service/target:/app/auth-service/target:rw
    environment:
      JWT_SECRET: dkeX4Qnao6JvcDnoumCCEVjJloGlrLpGGyeS6G+xU8Q=
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
    depends_on:
      - auth-service-db
      - kafka
    networks:
      - internal

volumes:
  postgres_data:

networks:
  internal:
